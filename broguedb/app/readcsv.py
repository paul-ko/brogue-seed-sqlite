import csv
import itertools
import logging
from pathlib import Path

from broguedb.app.data import Catalog
from broguedb.app.data import CatalogMetadata
from broguedb.app.data import CatalogObject

_logger = logging.getLogger(__name__)


def read_file(path: Path) -> Catalog:
    _logger.info("Reading the CSV at %s", path.absolute())

    with path.open(encoding="UTF-8", newline="") as f:
        reader = csv.reader(f)
        next(reader)  # skip the header line generated by BrogueCE

        # Handle the first line separately, because we need to grab the dungeon version
        # from it.
        first_row = next(reader)
        dungeon_version = first_row[0]
        out = tuple(
            _row_to_catalog_object(r) for r in itertools.chain([first_row], reader)
        )
        last_obj = out[-1]
        _logger.info("Read %d objects", len(out))
        metadata = CatalogMetadata(
            dungeon_version,
            last_obj.depth,
            out[0].seed,
            last_obj.seed,
        )
        _logger.info("%s", metadata)
    return Catalog(metadata, out)


def _row_to_catalog_object(row: list[str]) -> CatalogObject:
    # Read empty fields as None, not as empty strings.
    row = [None if r == "" else r for r in row]
    return CatalogObject.from_csv_row(row)
